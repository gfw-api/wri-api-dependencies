digraph wrip_api {
  rankdir=LR;
  graph [ fontname = "Helvetica-Oblique",
    fontsize = 15,
    label = "\nWRI API Microservices Dependencies",
  ];
  "analysis-gee" -> geostore;
  "aqueduct-analysis" -> geostore;
  "argcis-proyx" -> geostore;
  area -> { geostore "query" "fw-teams" "subscriptions" };
  bigquery -> { dataset converter };
  arcgis -> { dataset geostore converter };
  carto -> { dataset converter };
  converter -> geostore;
  "dataset" -> { "control-tower" "task-async" widget layer "graph-client" vocabulary metadata arcgis carto "document-adapter" nexgddp bigquery gee };
  "doc-orchestrator" -> { "dataset" "doc-executor" };
  "doc-executor" -> { "dataset" "doc-orchestrator" "doc-writer" };
  "doc-writer" -> { "doc-executor" "doc-executor" };
  "document-adapter" -> { dataset converter "doc-orchestrator" };
  "fires-summary-stats" -> query;
  "forest-change" -> { "query" geostore };
  "forest-watcher-api" -> { geostore area "gfw-forms" };
  "gfw-forms" -> { area "fw-teams" };
  "fw-alerts" -> { geostore "glad-analysis-athena" };
  "gfw-contextual-layers" -> "fw-teams";
  "fw-teams" -> "gfw-user";
  gee -> { geostore "gfw-ogr" };
  "gee-tiles" -> layer;
  "gfw-forma" -> geostore;
  "gfw-guira" -> geostore;
  "gfw-ogr";
  "gfw-prodes" -> geostore;
  "gfw-umd" -> { "query" geostore "glad-analysis-athena" };
  "gfw-user" -> stories;
  "glad-analysis-athena" -> { geostore "fires-summary-stats" };
  "graph-client" -> "dataset";
  imazon -> geostore;
  layer -> { "dataset" "graph-client" "vocabulary" };
  metadata -> { "dataset" layer widget };
  nexgddp -> { "dataset" geostore layer "gfw-ogr" "query" };
  "query" -> {"dataset" "glad-alerts" "gfw-guira" "gfw-imazon-alerts" "gfw-prodes" "quicc" "gfw-terrai-alerts" "viirs-active-fires"};
  quicc -> geostore;
  "rw-lp" -> "control-tower";
  story -> geostore;
  subscriptions -> { "query" layer "dataset" geostore area "gfw-user" };
  "task-async" -> "dataset";
  "viirs-active-fires" -> geostore;
  vocabulary -> { "dataset" "graph-client" };
  webshot;
  widget -> { "control-tower" "dataset" "graph-client" vocabulary webshot };
  "resource-watch-manager" -> { "control-tower" "widget" };
}
